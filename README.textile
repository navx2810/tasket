h1. Tasket

Tasket is a kanban application similar to "Trello":http://trello.com.

h2. Preface

I am creating this application, because I feel that there are many kanban applications that either oversimplify or overcomplicate the problems they are trying to solve.

This project is to be used by any creator who wants to keep a heirarachical task-list that can be filtered and accessed by solo creators or groups of creators.

In Trello, I had the issue of combining sub-lists withing sub-lists. I would have to create new lanes and somehow logcially connect them so any reader could make sense of the havoc.

h3. Example

Let's say I want to organize the tasks for home improvement. So I create a new Trello board and name the first lane *Tasks*. I start writing my tasks that I need to complete:

* Wash the kitchen floor
* Empty the dishes from the dishwasher
* Fill the dishwasher
* Scrub the sink
* Vacuum the living room floor
* Dust the furniture in the living room
* Shampoo the kids room carpet
* Mow the lawn
* Wash the cars
* ...

After a while, I start adding more and more to this list. It becomes unwieldy fast. So I decide that I need to seperate these task by room. I create a lane for each room on my Trello board and now things start to get out of hand. I may end up with 6 or 7 different lanes that depend on the first lane I created.

If I decide that I wanted to start adding tasks for:

* fixing the plumbing downstairs
* painting the dining room

I would create another lane for those category of tasks and seperate it by cleaning and improvement. However, now I decide I want to divide the improvement tasks into rooms, leaving me with cleaning having 6 or 7 lanes and improvement having 6 or 7 as well.

You can see how the complexity would skyrocket if you start adding more things. While relatively simple projects like home-improvement are often single-person tasks, imagine designing or developing software. Teams of teams are working on their own sub-division of sub-division and communication between lanes or even boards would be hell.

That is the problem this project aims to solve.

bq. For Trello users, you can imagine this software would let you create lanes in lanes. It's an over simplification of the premise, but it might give you a better idea of how this will work.

h2. Features

- Intuitive project-based hierarchy := Tasks contain parents and if a parent has two or more tasks, it's considered a project.
- User control and collaboration := Users can choose to "take on" tasks. Their name will appear in the task contributors list and any comments or updates will be linked and they will be notified.
- Mobile-first design := The application will keep mobile devices in mind so you can access the application from a phone, tablet, desktop, or web interface.

h3. Stretch-goal features

- Offline Save Data := The application can be used offline and when the user connects to a network, the changes will sync with the server.

h2. Technology

- "Vue.js":http://vuejs.org := a front-end library to assist in creating user-interfaces.
- "Webpack":https://webpack.github.io/ := a utility for building code into a single distributable file for web.
- "Babel":https://babeljs.io/ := a "_transpiler_" which accepts ES6 syntax and translates to ES5 code for full browser support.
- "NeDB":https://github.com/louischatriot/nedb := a subset from MongoDB which allows you to use persistent or in-memory storage options.
- "TypeScript":https://www.typescriptlang.org/ := similar to Babel, TypeScript is a microsoft-created project which adds types to ES6 syntax. Widely support by many IDE/Editors and has great development support.
- "NodeJS":https://nodejs.org := the back-end language used by the server/electron application.
- "Koa.JS":http://koajs.com/ := the lightweight server library that will be used for creating a RESTful microservice.

h3. Considered Technology

- "Feathers":http://feathersjs.com/ := a back-end server framework for real-time APIs. Includes SocketIO. Would replace KoaJS.
- "Socket.IO":https://socket.io/ := a real-time socket library. Works with Koa.JS and is included with Feathers.
